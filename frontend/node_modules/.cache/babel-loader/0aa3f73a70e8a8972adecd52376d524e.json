{"ast":null,"code":"var _jsxFileName = \"/frontend/src/components/MarkerItem.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Marker, Popup } from 'react-leaflet';\nimport { greenIcon, blueIcon, goldIcon, redIcon, violetIcon, blackIcon } from '../utils/leafletIcons';\nimport { withRouter, Link } from 'react-router-dom';\n\nconst MarkerItem = ({\n  item\n}) => {\n  //asignamos un color a un tipo de comida, si no, se asigna el azul\n  const [icon, setIcon] = useState(blueIcon);\n  useEffect(() => {\n    switch (item.cuisine) {\n      case \"American\":\n        setIcon(goldIcon);\n        break;\n\n      case \"Irish\":\n        setIcon(greenIcon);\n        break;\n\n      case \"Chinese\":\n        setIcon(redIcon);\n        break;\n\n      case \"Hamburgers\":\n        setIcon(violetIcon);\n        break;\n\n      case \"Pizza\":\n        setIcon(blackIcon);\n        break;\n\n      default:\n        setIcon(blueIcon);\n        break;\n    }\n  }, []);\n\n  if (item.address.coord[0] && item.address.coord[1]) {\n    return /*#__PURE__*/React.createElement(Marker, {\n      position: [item.address.coord[1], item.address.coord[0]],\n      icon: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \"Nombre:\"), \" \", r.nombre, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"Ciudad: \"), r.borough, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, \"Direccion:\"), \" \", r.address.street, \" \", m.address.building, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 68\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"Tipo de Comida: \"), r.cuisine, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      type: \"button\",\n      to: `/restaurant/${item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"Ver detalles\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      className: classes.margin,\n      onClick: () => history.push(`/restaurant/${r._id}/edit`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"Editar\")));\n  } else {\n    console.log(item);\n    return null;\n  }\n};\n\nexport default withRouter(MarkerItem);","map":{"version":3,"sources":["/frontend/src/components/MarkerItem.js"],"names":["React","useEffect","useState","Marker","Popup","greenIcon","blueIcon","goldIcon","redIcon","violetIcon","blackIcon","withRouter","Link","MarkerItem","item","icon","setIcon","cuisine","address","coord","r","nombre","borough","street","m","building","id","classes","margin","history","push","_id","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Marker, Popup } from 'react-leaflet';\nimport { greenIcon, blueIcon, goldIcon, redIcon, violetIcon, blackIcon } from '../utils/leafletIcons';\nimport { withRouter, Link } from 'react-router-dom';\n\nconst MarkerItem = ({ item }) => {\n\n  //asignamos un color a un tipo de comida, si no, se asigna el azul\n\n  const [icon, setIcon] = useState(blueIcon);\n\n  useEffect(() => {\n    switch (item.cuisine) {\n      case \"American\":\n        setIcon(goldIcon);\n        break;\n      case \"Irish\":\n        setIcon(greenIcon);\n        break;\n      case \"Chinese\":\n        setIcon(redIcon);\n        break;\n      case \"Hamburgers\":\n        setIcon(violetIcon);\n        break;\n      case \"Pizza\":\n        setIcon(blackIcon);\n        break;\n      default:\n        setIcon(blueIcon);\n        break;\n    }\n  }, [])\n\n  if ((item.address.coord[0]) && (item.address.coord[1])) {\n    return (\n      <Marker position={[item.address.coord[1], item.address.coord[0]]} icon={icon} >\n        <Popup>\n          <b>Nombre:</b> {r.nombre} < br />\n          <b>Ciudad: </b>{r.borough}< br />\n          <b>Direccion:</b> {r.address.street} {m.address.building}< br />\n          <b>Tipo de Comida: </b>{r.cuisine}< br />\n          <Link type=\"button\" to={`/restaurant/${item.id}`} >Ver detalles</Link>\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            color=\"primary\"\n            \n            className={classes.margin}\n            onClick={() => history.push(`/restaurant/${r._id}/edit`)}\n          >Editar</Button>\n\n        </Popup>\n      </Marker>\n    );\n  } else {\n    console.log(item);\n    return null\n  }\n\n};\n\nexport default withRouter(MarkerItem);"]},"metadata":{},"sourceType":"module"}