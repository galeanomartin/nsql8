{"ast":null,"code":"var _jsxFileName = \"/frontend/src/components/MarkerItem.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Marker, Popup } from 'react-leaflet';\nimport { greenIcon, blueIcon, goldIcon, redIcon, violetIcon, blackIcon } from '../utils/leafletIcons';\nimport { withRouter, Link } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Button, Grid, Paper } from '@material-ui/core';\n\nconst MarkerItem = ({\n  item\n}) => {\n  //asignamos un color a un tipo de comida, si no, se asigna el azul\n  const [icon, setIcon] = useState(blueIcon);\n  useEffect(() => {\n    switch (item.cuisine) {\n      case \"American\":\n        setIcon(goldIcon);\n        break;\n\n      case \"Irish\":\n        setIcon(greenIcon);\n        break;\n\n      case \"Chinese\":\n        setIcon(redIcon);\n        break;\n\n      case \"Hamburgers\":\n        setIcon(violetIcon);\n        break;\n\n      case \"Pizza\":\n        setIcon(blackIcon);\n        break;\n\n      default:\n        setIcon(blueIcon);\n        break;\n    }\n  }, []);\n\n  if (item.address.coord[0] && item.address.coord[1]) {\n    return /*#__PURE__*/React.createElement(Marker, {\n      position: [item.address.coord[1], item.address.coord[0]],\n      icon: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"Nombre:\"), \" \", item.nombre, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 40\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Ciudad: \"), item.borough, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 40\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Direccion:\"), \" \", item.address.street, \" \", item.address.building, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 74\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Tipo de Comida: \"), item.cuisine, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 48\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      type: \"button\",\n      to: `/restaurant/${item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Ver detalles\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      startIcon: /*#__PURE__*/React.createElement(EditIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 72\n        }\n      }),\n      onClick: () => history.push(`/restaurant/${item.id}/edit`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Editar\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success \",\n      to: `/restaurant/${item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Agregar Lugar\")));\n  } else {\n    console.log(item);\n    return null;\n  }\n};\n\nexport default withRouter(MarkerItem);","map":{"version":3,"sources":["/frontend/src/components/MarkerItem.js"],"names":["React","useEffect","useState","Marker","Popup","greenIcon","blueIcon","goldIcon","redIcon","violetIcon","blackIcon","withRouter","Link","EditIcon","Button","Grid","Paper","MarkerItem","item","icon","setIcon","cuisine","address","coord","nombre","borough","street","building","id","history","push","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Marker, Popup } from 'react-leaflet';\nimport { greenIcon, blueIcon, goldIcon, redIcon, violetIcon, blackIcon } from '../utils/leafletIcons';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport {\n  Button,\n  Grid,\n  Paper,\n} from '@material-ui/core'\n\nconst MarkerItem = ({ item }) => {\n\n  //asignamos un color a un tipo de comida, si no, se asigna el azul\n\n  const [icon, setIcon] = useState(blueIcon);\n\n  useEffect(() => {\n    switch (item.cuisine) {\n      case \"American\":\n        setIcon(goldIcon);\n        break;\n      case \"Irish\":\n        setIcon(greenIcon);\n        break;\n      case \"Chinese\":\n        setIcon(redIcon);\n        break;\n      case \"Hamburgers\":\n        setIcon(violetIcon);\n        break;\n      case \"Pizza\":\n        setIcon(blackIcon);\n        break;\n      default:\n        setIcon(blueIcon);\n        break;\n    }\n  }, [])\n\n  if ((item.address.coord[0]) && (item.address.coord[1])) {\n    return (\n      <Marker position={[item.address.coord[1], item.address.coord[0]]} icon={icon} >\n        <Popup>\n          <b>Nombre:</b> {item.nombre} < br />\n          <b>Ciudad: </b>{item.borough}< br />\n          <b>Direccion:</b> {item.address.street} {item.address.building}< br />\n          <b>Tipo de Comida: </b>{item.cuisine}< br />\n          <Link type=\"button\" to={`/restaurant/${item.id}`} >Ver detalles</Link>\n          <Button\n                                                            variant=\"contained\"\n                                                            size=\"small\"\n                                                            color=\"primary\"\n                                                            startIcon={<EditIcon />}\n                                                          \n                                                            onClick={() => history.push(`/restaurant/${item.id}/edit`)}\n                                                        >Editar</Button>\n\n\n          <button type=\"button\" className=\"btn btn-success \" to={`/restaurant/${item.id}`}>Agregar Lugar</button>\n\n        </Popup>\n      </Marker>\n    );\n  } else {\n    console.log(item);\n    return null\n  }\n\n};\n\nexport default withRouter(MarkerItem);"]},"metadata":{},"sourceType":"module"}