{"ast":null,"code":"var _jsxFileName = \"/frontend/src/components/Select.js\";\nimport React, { useEffect, useState } from 'react'; //************************************ Components Materia-UI ************************************\n\nimport { Grid, Tooltip, TextField, Paper } from '@material-ui/core';\nimport { Autocomplete, Alert } from '@material-ui/lab'; //********************************************* API *********************************************\n\nimport { ClusteringMapUrlBase } from '../../../utils/constants';\nimport axios from 'axios'; //********************************************* Styles *********************************************\n\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(2)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n})); //********************************************* Components *********************************************\n\nexport default function Select(props) {\n  const classes = useStyles();\n  const [status, setStatus] = useState({\n    showMessage: false,\n    type: '',\n    message: ''\n  });\n\n  const handleStatus = (showMessage, type = '', message = '') => setStatus({\n    showMessage: showMessage,\n    type: type,\n    message: message\n  });\n\n  const fields = ['Borough', 'Cuisine', 'Name'];\n  const [categories, setCategories] = useState([]);\n\n  const handleCategories = categories => setCategories(categories);\n\n  useEffect(() => {\n    console.log('1Â° RestaurantCategorySelector...');\n\n    const fetchCategories = async field => {\n      const categoriesFetched = await axios.get(`${ClusteringMapUrlBase}/restaurants/${field}`);\n      return categoriesFetched.data ? handleCategories(categoriesFetched.data) : handleStatus(true, 'warning', 'No fue posible cargar las categorias!');\n    };\n\n    fetchCategories(props.field ? props.field : 'Cuisine');\n  }, [props.field]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 5,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    align: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Seleccione una campo para filtrar por categor\\xEDa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"combo-box-fields\",\n    options: fields,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      required: true,\n      id: \"standard-basic\",\n      label: \"Campo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 50\n      }\n    })),\n    onSelect: e => props.handleField(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Seleccione una categoria\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"combo-box-category\",\n    options: categories,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      required: true,\n      id: \"standard-basic\",\n      label: \"Categoria\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 50\n      }\n    })),\n    onSelect: e => props.handleCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  })), status.showMessage ? /*#__PURE__*/React.createElement(Alert, {\n    severity: status.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 27\n    }\n  }, \"Oooops! \\u2014 \", status.message) : ''))));\n}","map":{"version":3,"sources":["/frontend/src/components/Select.js"],"names":["React","useEffect","useState","Grid","Tooltip","TextField","Paper","Autocomplete","Alert","ClusteringMapUrlBase","axios","makeStyles","useStyles","theme","root","flexGrow","padding","spacing","paper","textAlign","color","palette","text","secondary","Select","props","classes","status","setStatus","showMessage","type","message","handleStatus","fields","categories","setCategories","handleCategories","console","log","fetchCategories","field","categoriesFetched","get","data","params","e","handleField","target","value","handleCategory"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\n\n//************************************ Components Materia-UI ************************************\nimport {\n    Grid,\n    Tooltip,\n    TextField,\n    Paper,\n} from '@material-ui/core'\nimport { Autocomplete, Alert } from '@material-ui/lab';\n\n\n//********************************************* API *********************************************\nimport {ClusteringMapUrlBase} from '../../../utils/constants';\nimport axios from 'axios';\n\n//********************************************* Styles *********************************************\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(2),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }));\n\n//********************************************* Components *********************************************\nexport default function Select (props) {\n    const classes = useStyles();\n\n    const [status, setStatus] = useState({showMessage: false, type: '', message:''})\n    const handleStatus = (showMessage, type='', message='') => setStatus({showMessage: showMessage, type: type, message: message})\n\n    const fields = ['Borough', 'Cuisine', 'Name']\n    \n    const [categories, setCategories] = useState([])\n    const handleCategories = categories => setCategories(categories)\n\n    useEffect(() => {\n        console.log('1Â° RestaurantCategorySelector...')\n        const fetchCategories = async field => {\n            const categoriesFetched = await axios.get(`${ClusteringMapUrlBase}/restaurants/${field}`)            \n            return categoriesFetched.data \n            ? handleCategories(categoriesFetched.data) \n            : handleStatus(true, 'warning', 'No fue posible cargar las categorias!')\n        }\n        fetchCategories(props.field ? props.field : 'Cuisine')\n        \n    }, [props.field]);\n\n    return (\n        <div className={classes.root}>\n        \n        <Paper elevation={5}  className={classes.paper}>\n            <Grid container justify=\"space-around\" align=\"center\" spacing={3}>\n                <Grid item xs sm={3}>\n                    <Tooltip title=\"Seleccione una campo para filtrar por categorÃ­a\">\n                    <Autocomplete\n                        id=\"combo-box-fields\"\n                        options={fields}\n                        renderInput={(params) => <TextField {...params} required id=\"standard-basic\" label=\"Campo\"/>}\n                        onSelect={e => props.handleField(e.target.value)}\n                    />\n                    </Tooltip>\n                </Grid>\n                <Grid item xs sm={3}>\n                    <Tooltip title=\"Seleccione una categoria\">\n                    <Autocomplete\n                        id=\"combo-box-category\"\n                        options={categories}\n                        renderInput={(params) => <TextField {...params} required id=\"standard-basic\" label=\"Categoria\"/>}\n                        onSelect={e => props.handleCategory(e.target.value)}\n                    />\n                    </Tooltip>\n                    {\n                        status.showMessage \n                        ? <Alert severity={status.type}>Oooops! â {status.message}</Alert>\n                        : ''\n                    }\n                </Grid>\n            </Grid>\n        </Paper>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}