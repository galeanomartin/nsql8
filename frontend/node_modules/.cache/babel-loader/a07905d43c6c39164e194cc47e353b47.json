{"ast":null,"code":"var _jsxFileName = \"/frontend/src/components/Mapa.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Map, TileLayer } from 'react-leaflet';\nimport './../app.css';\nimport { list_restaurants, alertError, list_categories, list_restaurants_type } from \"../utils/functions\";\nimport MarkerList from \"./MarkerList\";\nimport { Container } from '@material-ui/core';\n\nconst Mapa = () => {\n  const [search, setSearch] = useState(\"\");\n  const [lastSearch, setLastSearch] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [restaurants, setRestaurants] = useState([]);\n  const [currentRestaurants, setCurrentRestaurants] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (search === \"\") {\n      setCurrentRestaurants(restaurants);\n      setLastSearch(search);\n    } else {\n      setLoading(true);\n      list_restaurants_type(search).then(res => {\n        setCurrentRestaurants(res);\n        setLastSearch(search);\n        setLoading(false);\n      }).catch(err => {\n        setLoading(false);\n        alertError();\n      });\n    }\n  }, [search]);\n  useEffect(() => {\n    setLoading(true);\n    list_restaurants().then(res => {\n      setRestaurants(res);\n      setCurrentRestaurants(res);\n      list_categories().then(res => {\n        setCategories(res);\n        setLoading(false);\n      }).catch(err => {\n        setLoading(false);\n        alertError();\n      });\n    }).catch(err => {\n      setLoading(false);\n      alertError();\n      return;\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), loading ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Cargando datos aguarde por favor....\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Aeropuertos del mundo\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"input-group-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Filtrar por tipo de comida\")), /*#__PURE__*/React.createElement(\"select\", {\n    class: \"custom-select\",\n    onChange: e => setSearch(e.target.value),\n    defaultValue: lastSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"Todas las categor\\xEDas\"), categories.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    value: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, item)))), /*#__PURE__*/React.createElement(Map, {\n    center: [40.730610, -73.935242],\n    zoom: 4,\n    minZoom: 2,\n    preferCanvas: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MarkerList, {\n    list: currentRestaurants,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })))));\n};\n\nexport default Mapa;","map":{"version":3,"sources":["/frontend/src/components/Mapa.js"],"names":["React","Fragment","useState","useEffect","Map","TileLayer","list_restaurants","alertError","list_categories","list_restaurants_type","MarkerList","Container","Mapa","search","setSearch","lastSearch","setLastSearch","categories","setCategories","restaurants","setRestaurants","currentRestaurants","setCurrentRestaurants","loading","setLoading","then","res","catch","err","e","target","value","map","item"],"mappings":"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","sourcesContent":["import React,{Fragment,useState,useEffect} from \"react\";\nimport {Map,TileLayer} from 'react-leaflet';\nimport './../app.css';\nimport { list_restaurants, alertError, list_categories, list_restaurants_type } from \"../utils/functions\";\nimport MarkerList from \"./MarkerList\";\nimport { Container } from '@material-ui/core';\n\n\nconst Mapa = () => {\n\n    const [search,setSearch] = useState (\"\");\n    const [lastSearch,setLastSearch] = useState (\"\");\n    \n    const [categories,setCategories] = useState ([])\n    const [restaurants,setRestaurants] = useState ([]);\n    const [currentRestaurants,setCurrentRestaurants] = useState ([]);\n    const [loading,setLoading] = useState (false);\n\n    useEffect(()=>{\n        if (search === \"\"){  \n          setCurrentRestaurants (restaurants);\n          setLastSearch (search)\n        }else{\n          setLoading (true);\n          list_restaurants_type (search)\n          .then (res=>{\n            setCurrentRestaurants (res);\n            setLastSearch (search)\n            setLoading (false);\n          })\n          .catch (err=>{\n            setLoading (false);\n            alertError ();\n          })\n        }\n    },[search])\n\n    useEffect (()=>{\n        setLoading (true);\n        list_restaurants ()\n        .then (res=>{\n          setRestaurants (res);\n          setCurrentRestaurants (res);\n          list_categories ()\n          .then (res=>{\n            setCategories (res);\n            setLoading (false);\n          })\n          .catch (err=>{\n            setLoading (false);\n            alertError ();\n          })\n        })\n        .catch (err=>{\n          setLoading (false);\n          alertError ();\n          return;\n        })\n    },[])\n\n    return (\n      <Fragment>\n        <br />\n      \n        <br/>\n        {(loading)?\n        \n        <h2>Cargando datos aguarde por favor....</h2>\n        :\n        \n        <div>\n          <br />\n      <div class=\"row justify-content-center\">\n        <h1>Aeropuertos del mundo</h1>\n      </div>\n      <br />\n      <Container maxWidth=\"800\">\n            <div class=\"input-group\">\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text\">Filtrar por tipo de comida</span>\n              </div>\n              <select class=\"custom-select\" onChange={(e)=>setSearch(e.target.value)} defaultValue={lastSearch}>\n                <option value=\"\">Todas las categorías</option>\n                {categories.map((item)=>(\n                    <option value={item}>{item}</option>\n                ))}\n              </select>\n            </div>\n        <Map center={[40.730610,-73.935242]} zoom={4} minZoom={2} preferCanvas={true}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n        />\n        <MarkerList list={currentRestaurants} />\n        </Map>\n        </Container>\n        </div>\n        \n        }\n        \n      </Fragment>\n    );\n};\n\nexport default Mapa;"]},"metadata":{},"sourceType":"module"}