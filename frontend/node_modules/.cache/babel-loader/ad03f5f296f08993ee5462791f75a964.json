{"ast":null,"code":"var _jsxFileName = \"/frontend/src/components/MarkerItem.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Marker, Popup } from 'react-leaflet';\nimport { greenIcon, blueIcon, goldIcon, redIcon, violetIcon, blackIcon } from '../utils/leafletIcons';\nimport { withRouter, Link } from 'react-router-dom';\n\nconst MarkerItem = ({\n  item\n}) => {\n  //asignamos un color a un tipo de comida, si no, se asigna el azul\n  const [icon, setIcon] = useState(blueIcon);\n  useEffect(() => {\n    switch (item.cuisine) {\n      case \"American\":\n        setIcon(goldIcon);\n        break;\n\n      case \"Parrilla\":\n        setIcon(goldIcon);\n        break;\n\n      case \"Irish\":\n        setIcon(greenIcon);\n        break;\n\n      case \"Sushi\":\n        setIcon(greenIcon);\n        break;\n\n      case \"Chinese\":\n        setIcon(redIcon);\n        break;\n\n      case \"Cervecería\":\n        setIcon(redIcon);\n        break;\n\n      case \"Hamburgers\":\n        setIcon(violetIcon);\n        break;\n\n      case \"Hamburguesas\":\n        setIcon(violetIcon);\n        break;\n\n      case \"Pizza\":\n        setIcon(blackIcon);\n        break;\n\n      case \"Pizzería\":\n        setIcon(blackIcon);\n        break;\n\n      case \"Helados\":\n        setIcon(blueIcon);\n        break;\n\n      default:\n        setIcon(blueIcon);\n        break;\n    }\n  }, []);\n\n  if (item.address.coord[0] && item.address.coord[1]) {\n    return /*#__PURE__*/React.createElement(Marker, {\n      position: [item.address.coord[1], item.address.coord[0]],\n      icon: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"Nombre:\"), \" \", item.name, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \"Ciudad: \"), item.borough, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 40\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Direcci\\xF3n:\"), \" \", item.address.street, \" \", item.address.building, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 74\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Tipo de Comida: \"), item.cuisine, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 48\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      type: \"button\",\n      to: `/restaurant/${item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"Ver m\\xE1s\")));\n  } else {\n    console.log(item);\n    return null;\n  }\n};\n\nexport default withRouter(MarkerItem);","map":{"version":3,"sources":["/frontend/src/components/MarkerItem.js"],"names":["React","useEffect","useState","Marker","Popup","greenIcon","blueIcon","goldIcon","redIcon","violetIcon","blackIcon","withRouter","Link","MarkerItem","item","icon","setIcon","cuisine","address","coord","name","borough","street","building","id","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,eAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,EAAwCC,OAAxC,EAAiDC,UAAjD,EAA6DC,SAA7D,QAA8E,uBAA9E;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAE/B;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACI,QAAD,CAAhC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,YAAQa,IAAI,CAACG,OAAb;AACE,WAAK,UAAL;AACED,QAAAA,OAAO,CAACT,QAAD,CAAP;AACA;;AACA,WAAK,UAAL;AACES,QAAAA,OAAO,CAACT,QAAD,CAAP;AACA;;AACJ,WAAK,OAAL;AACES,QAAAA,OAAO,CAACX,SAAD,CAAP;AACA;;AACA,WAAK,OAAL;AACEW,QAAAA,OAAO,CAACX,SAAD,CAAP;AACA;;AACJ,WAAK,SAAL;AACEW,QAAAA,OAAO,CAACR,OAAD,CAAP;AACA;;AACA,WAAK,YAAL;AACEQ,QAAAA,OAAO,CAACR,OAAD,CAAP;AACA;;AACJ,WAAK,YAAL;AACEQ,QAAAA,OAAO,CAACP,UAAD,CAAP;AACA;;AACA,WAAK,cAAL;AACEO,QAAAA,OAAO,CAACP,UAAD,CAAP;AACA;;AACJ,WAAK,OAAL;AACEO,QAAAA,OAAO,CAACN,SAAD,CAAP;AACA;;AACA,WAAK,UAAL;AACEM,QAAAA,OAAO,CAACN,SAAD,CAAP;AACA;;AACJ,WAAK,SAAL;AACIM,QAAAA,OAAO,CAACV,QAAD,CAAP;AACA;;AACJ;AACEU,QAAAA,OAAO,CAACV,QAAD,CAAP;AACA;AApCJ;AAsCD,GAvCQ,EAuCN,EAvCM,CAAT;;AAyCA,MAAKQ,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAmB,CAAnB,CAAD,IAA4BL,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAmB,CAAnB,CAAhC,EAAwD;AACtD,wBACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAACL,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAmB,CAAnB,CAAD,EAAwBL,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAmB,CAAnB,CAAxB,CAAlB;AAAkE,MAAA,IAAI,EAAEJ,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,OACkBD,IAAI,CAACM,IADvB,oBAC6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD7B,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAEkBN,IAAI,CAACO,OAFvB,eAE+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF/B,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,OAGqBP,IAAI,CAACI,OAAL,CAAaI,MAHlC,OAG2CR,IAAI,CAACI,OAAL,CAAaK,QAHxD,eAGiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHjE,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,EAI0BT,IAAI,CAACG,OAJ/B,eAIuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJvC,eAKE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAoB,MAAA,EAAE,EAAG,eAAcH,IAAI,CAACU,EAAG,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,CADF,CADF;AAYD,GAbD,MAaO;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACA,WAAO,IAAP;AACD;AAEF,CAjED;;AAmEA,eAAeH,UAAU,CAACE,UAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Marker, Popup } from 'react-leaflet';\nimport { greenIcon, blueIcon, goldIcon, redIcon, violetIcon, blackIcon } from '../utils/leafletIcons';\nimport { withRouter, Link } from 'react-router-dom';\n\n\nconst MarkerItem = ({ item }) => {\n\n  //asignamos un color a un tipo de comida, si no, se asigna el azul\n\n  const [icon, setIcon] = useState(blueIcon);\n\n  useEffect(() => {\n    switch (item.cuisine) {\n      case \"American\":\n        setIcon(goldIcon);\n        break;\n        case \"Parrilla\":\n          setIcon(goldIcon);\n          break;\n      case \"Irish\":\n        setIcon(greenIcon);\n        break;\n        case \"Sushi\":\n          setIcon(greenIcon);\n          break; \n      case \"Chinese\":\n        setIcon(redIcon);\n        break;\n        case \"Cervecería\":\n          setIcon(redIcon);\n          break; \n      case \"Hamburgers\":\n        setIcon(violetIcon);\n        break;\n        case \"Hamburguesas\":\n          setIcon(violetIcon);\n          break;\n      case \"Pizza\":\n        setIcon(blackIcon);\n        break;\n        case \"Pizzería\":\n          setIcon(blackIcon);\n          break;\n      case \"Helados\":\n          setIcon(blueIcon);\n          break; \n      default:\n        setIcon(blueIcon);\n        break;\n    }\n  }, [])\n\n  if ((item.address.coord[0]) && (item.address.coord[1])) {\n    return (\n      <Marker position={[item.address.coord[1], item.address.coord[0]]} icon={icon} >\n        <Popup>\n          <b>Nombre:</b> {item.name} < br />\n          <b>Ciudad: </b>{item.borough}< br />\n          <b>Dirección:</b> {item.address.street} {item.address.building}< br />\n          <b>Tipo de Comida: </b>{item.cuisine}< br />\n          <Link type=\"button\" to={`/restaurant/${item.id}`} >Ver más</Link>\n          \n        </Popup>\n      </Marker>\n    );\n  } else {\n    console.log(item);\n    return null\n  }\n\n};\n\nexport default withRouter(MarkerItem);"]},"metadata":{},"sourceType":"module"}