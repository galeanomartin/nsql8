{"ast":null,"code":"var _jsxFileName = \"/frontend/src/components/MarkerItem.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Marker, Popup } from 'react-leaflet';\nimport { greenIcon, blueIcon, goldIcon, redIcon, violetIcon, blackIcon } from '../utils/leafletIcons';\nimport { withRouter, Link } from 'react-router-dom';\n\nconst MarkerItem = ({\n  item\n}) => {\n  //asignamos un color a un tipo de comida, si no, se asigna el azul\n  const [icon, setIcon] = useState(blueIcon);\n  useEffect(() => {\n    switch (item.cuisine) {\n      case \"American\":\n        setIcon(goldIcon);\n        break;\n\n      case \"Irish\":\n        setIcon(greenIcon);\n        break;\n\n      case \"Chinese\":\n        setIcon(redIcon);\n        break;\n\n      case \"Hamburgers\":\n        setIcon(violetIcon);\n        break;\n\n      case \"Pizza\":\n        setIcon(blackIcon);\n        break;\n\n      default:\n        setIcon(blueIcon);\n        break;\n    }\n  }, []);\n\n  if (item.address.coord[0] && item.address.coord[1]) {\n    return /*#__PURE__*/React.createElement(Marker, {\n      position: [item.address.coord[1], item.address.coord[0]],\n      icon: icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, item.address.street), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }), item.borough, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }), \"Tipo de comida: \", item.cuisine, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      type: \"button\",\n      to: `/restaurant/${item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"Ver detalles\")));\n  } else {\n    console.log(item);\n    return null;\n  }\n};\n\nexport default withRouter(MarkerItem);","map":{"version":3,"sources":["/frontend/src/components/MarkerItem.js"],"names":["React","useEffect","useState","Marker","Popup","greenIcon","blueIcon","goldIcon","redIcon","violetIcon","blackIcon","withRouter","Link","MarkerItem","item","icon","setIcon","cuisine","address","coord","name","street","borough","id","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAAQC,MAAR,EAAeC,KAAf,QAA2B,eAA3B;AACA,SAAQC,SAAR,EAAkBC,QAAlB,EAA2BC,QAA3B,EAAoCC,OAApC,EAA4CC,UAA5C,EAAuDC,SAAvD,QAAuE,uBAAvE;AACA,SAAQC,UAAR,EAAmBC,IAAnB,QAA8B,kBAA9B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAE/B;AAEI,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBd,QAAQ,CAAEI,QAAF,CAA/B;AAEAL,EAAAA,SAAS,CAAE,MAAI;AACb,YAAQa,IAAI,CAACG,OAAb;AACE,WAAK,UAAL;AACED,QAAAA,OAAO,CAAET,QAAF,CAAP;AACA;;AACF,WAAK,OAAL;AACES,QAAAA,OAAO,CAAEX,SAAF,CAAP;AACA;;AACF,WAAK,SAAL;AACEW,QAAAA,OAAO,CAAER,OAAF,CAAP;AACA;;AACF,WAAK,YAAL;AACEQ,QAAAA,OAAO,CAAEP,UAAF,CAAP;AACA;;AACF,WAAK,OAAL;AACIO,QAAAA,OAAO,CAAEN,SAAF,CAAP;AACA;;AACJ;AACEM,QAAAA,OAAO,CAAEV,QAAF,CAAP;AACA;AAlBJ;AAoBD,GArBQ,EAqBP,EArBO,CAAT;;AAuBA,MAAKQ,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAmB,CAAnB,CAAD,IAA4BL,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAmB,CAAnB,CAAhC,EAAuD;AACnD,wBACI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAACL,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAmB,CAAnB,CAAD,EAAuBL,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAmB,CAAnB,CAAvB,CAAlB;AAAiE,MAAA,IAAI,EAAEJ,IAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACM,IAAT,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIN,IAAI,CAACI,OAAL,CAAaG,MAAjB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKGP,IAAI,CAACQ,OALR,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,sBAOmBR,IAAI,CAACG,OAPxB,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eASE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAoB,MAAA,EAAE,EAAG,eAAcH,IAAI,CAACS,EAAG,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,CADF,CADJ;AAeH,GAhBD,MAgBK;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACA,WAAO,IAAP;AACH;AAEJ,CAlDD;;AAoDA,eAAeH,UAAU,CAAEE,UAAF,CAAzB","sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport {Marker,Popup} from 'react-leaflet';\nimport {greenIcon,blueIcon,goldIcon,redIcon,violetIcon,blackIcon} from '../utils/leafletIcons';\nimport {withRouter,Link} from 'react-router-dom';\n\nconst MarkerItem = ({item}) => {\n\n//asignamos un color a un tipo de comida, si no, se asigna el azul\n\n    const [icon,setIcon] = useState (blueIcon);\n\n    useEffect (()=>{\n      switch (item.cuisine){\n        case \"American\":\n          setIcon (goldIcon);\n          break;\n        case \"Irish\":\n          setIcon (greenIcon);\n          break;\n        case \"Chinese\":\n          setIcon (redIcon);\n          break;\n        case \"Hamburgers\":\n          setIcon (violetIcon);\n          break;\n        case \"Pizza\":\n            setIcon (blackIcon);\n            break;\n        default:\n          setIcon (blueIcon);\n          break;\n      }\n    },[])\n\n    if ((item.address.coord[0]) && (item.address.coord[1])){\n        return (\n            <Marker position={[item.address.coord[1],item.address.coord[0]]} icon={icon} >\n              <Popup>\n                <b>{item.name}</b>\n                <br/> \n                <i>{item.address.street}</i>\n                <br/> \n                {item.borough}\n                <br/> \n                Tipo de comida: {item.cuisine}\n                <br/> \n                <Link type=\"button\" to={`/restaurant/${item.id}`} >Ver detalles</Link>\n              </Popup>\n            </Marker>\n        );\n    }else{\n        console.log(item);\n        return null\n    }\n    \n};\n\nexport default withRouter (MarkerItem);"]},"metadata":{},"sourceType":"module"}